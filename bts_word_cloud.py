# -*- coding: utf-8 -*-
"""BTS Word Cloud

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RPlcLI7xSIP0mmgte8aX0LyfPak8Md5Z

# **BTS Word Cloud**
"""

# Importing Libraries

import pandas as pd
import re
import nltk
from nltk.tokenize import word_tokenize
from nltk.corpus import stopwords
from nltk.stem import WordNetLemmatizer
from wordcloud import WordCloud
import matplotlib.pyplot as plt

# Importing the file

df = pd.read_csv('lyrics-v6.csv',encoding='latin1')

df.head()

# Extracting Lyrics column

lyrics = df['lyrics']

lyrics.head()

# Removing Null Values

lyrics = lyrics.dropna()

lyrics.head()

# Removing special characters except a-zA-Z

lyrics = lyrics.apply(lambda x: re.sub(r'[^a-zA-Z\s]', '', x))

lyrics.head()

# Converting all the texts to lower case

lyrics = lyrics.apply(lambda x: x.lower())

# Tokenization

nltk.download('punkt')
df['lyrics_tokenized'] = lyrics.apply(lambda x: word_tokenize(x))

df.head()

# Drop all other columns from the dataframe except lyrics and lyrics_tokenized

df = df.drop(['id', 'album_title', 'eng_album_title', 'album_rd', 'album_seq','track_title','kor_track_title','eng_track_title','hidden_track','remix','featured','performed_by','repackaged','lang','has_full_ver'], axis=1)

df.head()

df=df.dropna()

df.head()

# Lemmatization

nltk.download('wordnet')
nltk.download('omw-1.4')
lemmatizer = WordNetLemmatizer()
df['lyrics_lemmatized'] = df['lyrics_tokenized'].apply(lambda x: [lemmatizer.lemmatize(word) for word in x])

df.head()

# Removing stopwords

nltk.download('stopwords')
stop_words = set(stopwords.words('english'))
df['lyrics_lemmatized_cleaned'] = df['lyrics_lemmatized'].apply(lambda x: [word for word in x if word not in stop_words])

df.head()

# Creating word cloud

text = ' '.join(df['lyrics_lemmatized_cleaned'].apply(lambda x: ' '.join(x)))
wordcloud = WordCloud(width=800, height=800, background_color='white').generate(text)

plt.figure(figsize=(8, 8), facecolor=None)
plt.imshow(wordcloud)
plt.axis('off')
plt.tight_layout(pad=0)
plt.show()

